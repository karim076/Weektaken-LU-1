name: üöÄ Build, Test & Deploy Node.js Sakila App to Azure App Service

env:
  ARTIFACT_NAME: sakila-app
  NODE_VERSION: 18.x
  PUBLISH_DIRECTORY: "./sakila-app"

on:
  push:
    branches:
      - main
      - deployment
  workflow_dispatch:

jobs:
  check-secrets:
    name: üîç Check Secrets
    runs-on: ubuntu-latest
    steps:
      - name: "Check if AZURE_WEBAPP_NAME secret exists"
        env: 
          super_secret: ${{ secrets.AZURE_WEBAPP_NAME }}
        if: ${{ env.super_secret == '' }}
        run: 'echo "AZURE_WEBAPP_NAME secret missing!"; exit 1;'

      - name: "Check if AZURE_WEBAPP_PUBLISH_PASSWORD secret exists"
        env: 
          super_secret: ${{ secrets.AZURE_WEBAPP_PUBLISH_PASSWORD }}
        if: ${{ env.super_secret == '' }}
        run: 'echo "AZURE_WEBAPP_PUBLISH_PASSWORD secret missing!"; exit 1;'

      - name: "Check if AZURE_WEBAPP_PUBLISH_USERNAME secret exists"
        env: 
          super_secret: ${{ secrets.AZURE_WEBAPP_PUBLISH_USERNAME }}
        if: ${{ env.super_secret == '' }}
        run: 'echo "AZURE_WEBAPP_PUBLISH_USERNAME secret missing!"; exit 1;'

  build:
    name: üèóÔ∏è Build & Test Node.js App
    runs-on: ubuntu-latest
    needs: check-secrets
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: testpassword
          MYSQL_DATABASE: sakila_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './sakila-app/package-lock.json'

      - name: Install Dependencies
        working-directory: ./sakila-app
        run: npm ci

      - name: Run Jest Unit Tests üß™
        working-directory: ./sakila-app
        run: npm test
        env:
          NODE_ENV: test

      - name: Build Application
        working-directory: ./sakila-app
        run: npm run build --if-present

      - name: Create Production Build
        working-directory: ./sakila-app
        run: |
          # Remove test files and dev dependencies
          rm -rf __tests__/ *.test.js .env.test .env
          npm prune --production
          
      - name: Upload Artifacts üì¶
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.PUBLISH_DIRECTORY }}
          exclude: |
            node_modules/.cache/
            __tests__/
            *.test.js
            .env*

  deploy:
    name: üöÄ Deploy to Azure
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Check Commit Message for "noAzure"
        id: check_commit
        run: |
          if git log -1 --pretty=%B | grep -iq "noAzure"; then
            echo "Skipping deployment due to 'noAzure' keyword in commit message."
            echo "skip_deploy=true" >> $GITHUB_ENV
          else
            echo "skip_deploy=false" >> $GITHUB_ENV
          fi

      - name: Download Artifact üì•
        if: env.skip_deploy == 'false'
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.PUBLISH_DIRECTORY }}

      - name: Deploy to Azure App Service ‚òÅÔ∏è
        if: env.skip_deploy == 'false'
        uses: azure/webapps-deploy@v3
        with: 
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: <publishData><publishProfile profileName="${{secrets.AZURE_WEBAPP_NAME}} - Zip Deploy" publishMethod="ZipDeploy" publishUrl="${{ secrets.AZURE_WEBAPP_NAME }}.scm.azurewebsites.net:443" userName="${{ secrets.AZURE_WEBAPP_PUBLISH_USERNAME }}" userPWD="${{ secrets.AZURE_WEBAPP_PUBLISH_PASSWORD }}" destinationAppUrl="http://${{ secrets.AZURE_WEBAPP_NAME }}.azurewebsites.net" SQLServerDBConnectionString="" mySQLDBConnectionString="" hostingProviderForumLink="" controlPanelLink="https://portal.azure.com" webSystem="WebSites"><databases /></publishProfile></publishData>
          package: '${{ env.PUBLISH_DIRECTORY }}'
